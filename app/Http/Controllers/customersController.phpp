<?php

namespace App\Http\Controllers;
use App\Customer;
use Illuminate\Http\Request;

class customersController extends Controller
{


/**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */

   
    public function index()
    {
         $customers = Customer::latest()->paginate(5);

        return view('customers.index',compact('Customer'))

            ->with('i', (request()->input('page', 1) - 1) * 5);
    }

/**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
               return view('customers.create');


    }


/**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $request->validate([

            'fullname' => 'required',

            'phone' => 'required',

        ]);


        Customers::create($request->all());

   

        return redirect()->route('customers.index')

                        ->with('success','Customer created successfully.');
    }

/**
     * Display the specified resource.
     *
     * @param  \App\Spec  $customers
     * @return \Illuminate\Http\Response
     */
    public function show(Customers $customers)
    {
               return view('customers.show',compact('customers'));


    }
/**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Spec  $Customers
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Customers $customers)
    {
        $request->validate([

            'fullname' => 'required',

            'phone' => 'required',
        ]);

  

       $spec->update($request->all());

  

        return redirect()->route('Customer.index')

                        ->with('success','Customers updated successfully');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Customers  $customers
     * @return \Illuminate\Http\Response
     */
    public function destroy(Customers $customers)
    {
       $customers->delete();

  

        return redirect()->route('customers.index')

                        ->with('Customers','Spec deleted successfully');
    }

}
